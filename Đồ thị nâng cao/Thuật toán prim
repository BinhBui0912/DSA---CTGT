#include<bits/stdc++.h>

using namespace std;

struct canh{
	int x, y, w;
};

using ll = long long;
int n, m;
vector<pair<int, int>> ke[1001];
bool used[1001];
int parent[1001], d[1001];

void nhap(){
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int x, y, w; cin >> x >> y >> w;
		ke[x].push_back({y, w});
		ke[y].push_back({x, w});
	}
	memset(used, false, sizeof(used));
	for(int i = 1; i <= n; i++)	d[i] = INT_MAX;
}

void prim(int u){
	priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> Q;
	vector<canh> MST;
	int res = 0;
	Q.push({0, u});
	while(!Q.empty()){
		pair<int, int> top = Q.top();
		Q.pop();
		int dinh = top.second, trongso = top.first;
		
		if(used[dinh]) continue;
		res += trongso;
		used[dinh] = true;
		if(u != dinh){
			MST.push_back({dinh, parent[dinh], trongso});
		}
		
		//d[y]: trong so nho nhat cua tat ca cac canh noi voi dinh y
		for(auto it : ke[dinh]){
			int y = it.first, w = it.second;
			if(!used[y] && w < d[y]){
				Q.push({w, y});
				d[y] = w;
				parent[y] = dinh;
			}
		}
	}
	cout << res << endl;
	for(auto it : MST){
		cout << it.x << " " << it.y << " " << it.w << endl;
	}
}

int main(){
	nhap();
	prim(6);
}
