#include<bits/stdc++.h>

using namespace std;

using ll = long long;
const int mod = 1e9 + 7; 

int main(){
	int t; cin >> t;
	while(t--){
		string s; cin >> s;
        int n = s.length();
        int dp[n][n];
        memset(dp, 0, sizeof(dp));
        for(int i = 0; i < n; i++){
        	dp[i][i] = 1;
		}
        for(int len = 2; len <= n; len++){
            for(int i = 0; i <= n - len; i++){
                int j = i + len - 1;
                if(len == 2 && s[i] == s[j]){
                	dp[i][j] = 2;
				}
				else if(s[i] == s[j]){
					dp[i][j] = dp[i + 1][j - 1] + 2;
				}
				else{
					dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);
				}
            }
        }
        cout << n - dp[0][n - 1] << endl;
	}
}
