#include<bits/stdc++.h>

using namespace std;

using ll = long long;
const int mod = 1e9 + 7;

int main(){
	int t; cin >> t;
	while(t--){
		int n, m, k; cin >> n >> m >> k; 
		string s1, s2, s3;
		cin >> s1 >> s2 >> s3;
		s1 = "1" + s1, s2 = "1" + s2, s3 = "1" + s3;
		int dp[n + 1][m + 1][k + 1];
		memset(dp, 0, sizeof(dp));
		for(int i = 0; i <= n; i++){
			for(int j = 0; j <= m; j++){
				for(int l = 0; l <= k; l++){
					if(i == 0 || j == 0 || l == 0){
						dp[i][j][l] = 0;
					}
					else{
						if(s1[i] == s2[j] && s2[j] == s3[l])
							dp[i][j][l] = dp[i - 1][j - 1][l - 1] + 1;
						else
							dp[i][j][l] = max({dp[i - 1][j][l], dp[i][j - 1][l], dp[i][j][l - 1]});
					}
				}
			}
		}
		cout << dp[n][m][k] << endl;
	}
} 
