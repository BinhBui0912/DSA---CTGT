#include<bits/stdc++.h>

using namespace std;

using ll = long long;
int n, k, m, ok;
char a[100][100];
vector<string> v, dict;
int visited[100][100];
string s;

void inp(){
	cin >> k >> m >> n;
	for(int i = 0; i < k; i++){
		string word; cin >> word;
		dict.push_back(word);
	}
	for(int i = 1; i <= m; i++){
		for(int j = 1; j <= n; j++) cin >> a[i][j];
	}
}

int dx[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
int dy[8] = {-1, 0, 1, -1, 1, -1, 0, 1};

void Try(int i, int j, string s){
	for(int it = 0; it < k; it++){
		if(dict[it] == s){
			v.push_back(s);
		}
	}
	for(int l = 0; l < 8; l++){
		int i1 = i + dx[l];
		int j1 = j + dy[l];
		if(i1 >= 1 && i1 <= m && j1 >=1 && j1 <= n && visited[i1][j1] == 0){
			visited[i1][j1] = 1;
			Try(i1, j1, s + a[i1][j1]);
			visited[i1][j1] = 0;
		}
	}
}

int main(){
	int t; cin >> t;
	while(t--){
		inp();
		for(int i = 1; i <= m; i++){
			for(int j = 1; j <= n; j++){
				memset(visited, 0, sizeof(visited));
				visited[i][j] = 1;
				string s = "";
				Try(i, j, s + a[i][j]);
			}
		}
		if(v.size()){
			for(string x : v){
				cout << x << " "; 
			}
		}
		else cout << "-1";
		v.clear();
		dict.clear();
		cout << endl;
	}
}
