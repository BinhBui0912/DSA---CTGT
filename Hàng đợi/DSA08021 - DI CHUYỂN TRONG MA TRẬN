#include<bits/stdc++.h>

using namespace std;

using ll = long long;

int n, m;
int a[1001][1001], d[1001][1001];
bool used[1001][1001];

void inp(){
	memset(used, false, sizeof(used));
	memset(d, 0, sizeof(d));
	cin >> n >> m;
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= m; j++)
			cin >> a[i][j];
	}
} 

int bfs(int i, int j){
	d[i][j] = 0;
	queue<pair<int, int>> q;
	q.push({i, j});
	while(!q.empty()){
		pair<int, int> top = q.front();
		q.pop();
		int i = top.first, j = top.second;
		if(i == n && j == m) return d[i][j];
		if(i + a[i][j] <= n && !used[i + a[i][j]][j]){
			used[i + a[i][j]][j] = true;
			d[i + a[i][j]][j] = d[i][j] + 1;
			q.push({i + a[i][j], j});
		}
		if(j + a[i][j] <= m && !used[i][j + a[i][j]]){
			used[i][j + a[i][j]] = true;
			d[i][j + a[i][j]] = d[i][j] + 1;
			q.push({i, j + a[i][j]});
		}
	}
	return -1;
}

int main(){
	int t; cin >> t;
	while(t--){
		inp();
		cout << bfs(1, 1) << endl;
	}
}
