#include<bits/stdc++.h>

using namespace std;

int n, m, disc[1001], low[1001], timer;
vector<int> ke[1001];
vector<pair<int, int>> cau;

void inp(){
	for(int i = 1; i < 1001; i++) ke[i].clear();
	timer = 0;
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int x, y; cin >> x >> y;
		ke[x].push_back(y);
		ke[y].push_back(x);
	}
	memset(disc, 0, sizeof(disc));
	memset(low, 0, sizeof(low));
}

void dfs(int u, int par){
	low[u] = disc[u] = ++timer;
	for(int v : ke[u]){
		if(v == par) continue;
		if(!disc[v]){
			dfs(v, u);
			low[u] = min(low[u], low[v]);
			if(low[v] > disc[u]){
				cau.push_back({min(u, v), max(u, v)});
			}
		}
		else low[u] = min(low[u], disc[v]);
	}
}

bool cmp(pair<int, int> a, pair<int, int> b){
	if(a.first != b.first){
		return a.first < b.first;
	}
	return a.second < b.second;
}

int main(){
	int t; cin >> t;
	while(t--){
		cau.clear();
		inp();
		for(int i = 1; i <= n; i++){
			if(!disc[i])
				dfs(i, -1);
		}
		sort(cau.begin(), cau.end(), cmp);
		for(auto it : cau){
			cout << it.first << " " << it.second << " ";
		}
		cout << endl;
	}
}
