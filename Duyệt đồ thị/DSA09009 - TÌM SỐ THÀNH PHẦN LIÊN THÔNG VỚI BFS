#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
int n, m;
vector<int> ke[1001];
bool visited[1001];
 
void inp(){
	for(int i = 0; i < 1001; i++) ke[i].clear();
	cin >> n >> m;
	for(int i = 1; i <= m; i++){
		int x, y; cin >> x >> y;
		ke[x].push_back(y);
		ke[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
}

void bfs(int u){
	queue<int> q;
	q.push(u);
	visited[u] = true;
	while(!q.empty()){
		int v = q.front();
		q.pop();
		for(int x : ke[v]){
			if(!visited[x]){
				q.push(x);
				visited[x] = true;
			}
		}
	}
}

int main(){
	int t; cin >> t;
	while(t--){
		inp();
		int dem = 0;
		for(int i = 1; i <= n; i++){
			if(!visited[i]){
				bfs(i);
				dem++;
			}
		}
		cout << dem << endl;
	}
}
