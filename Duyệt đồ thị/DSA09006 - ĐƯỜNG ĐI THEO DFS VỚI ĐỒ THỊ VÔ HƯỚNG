#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
int n, m, s, t;
vector<int> ke[1001];
bool visited[1001];
int parent[1001];
 
void inp(){
	for(int i = 0; i < 1001; i++) ke[i].clear();
	cin >> n >> m >> s >> t;
	for(int i = 1; i <= m; i++){
		int x, y; cin >> x >> y;
		ke[x].push_back(y);
		ke[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
	memset(parent, 0, sizeof(parent));
}

void dfs(int u){
	visited[u] = true;
	for(int v : ke[u]){
		if(!visited[v]){
			parent[v] = u;
			dfs(v);
		}
	}
}

int main(){
	int test; cin >> test;
	while(test--){
		inp();
		dfs(s);
		if(!visited[t]) cout << -1 << endl;
		else{
			vector<int> line;
			while(t != s){
				line.push_back(t);
				t = parent[t];
			}
			line.push_back(s);
			reverse(line.begin(), line.end());
			for(int x : line) cout << x << " ";
			cout << endl;
		}
	}
}
