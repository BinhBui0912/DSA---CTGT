#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
int n, m;
vector<int> ke[1001];
bool visited[1001];

void inp(){
	for(int i = 0; i < 1001; i++) ke[i].clear();
	cin >> n;
	for(int i = 1; i < n; i++){
		int x, y;
		cin >> x >> y;
		ke[x].push_back(y);
		ke[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
}

bool dfs(int u, int par){
	visited[u] = true;
	for(int v : ke[u]){
		if(!visited[v]){
			if(dfs(v, u)) return true;
		}
		else if(v != par){
			return true;
		}
	}
	return false;
}


int main(){
	int t; cin >> t;
	while(t--){
		inp();
		bool ok = true;
		for(int i = 1; i <= n; i++){
			memset(visited, false, sizeof(visited));
			if(dfs(i, 0)){
				ok = false; break;
			}
		}
		if(ok) cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
