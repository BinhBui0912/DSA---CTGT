#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
int n, m;
vector<int> ke[1001];
bool visited[1001];
int parent[1001];
int color[1001];

void inp(){
	for(int i = 0; i < 1001; i++) ke[i].clear();
	cin >> n >> m;
	for(int i = 1; i <= m; i++){
		int x, y;
		cin >> x >> y;
		ke[x].push_back(y);
	}
	memset(color, 0, sizeof(color));
}

bool dfs(int u){
	color[u] = 1;
	for(int v : ke[u]){
		if(color[v] == 0){
			if(dfs(v)) return true;
		}
		else if(color[v] == 1){
			return true;
		}
	}
	color[u] = 2;
	return false;
}


int main(){
	int t; cin >> t;
	while(t--){
		inp();
		bool ok = false;
		for(int i = 1; i <= n; i++){
			if(!color[i] && dfs(i)){
				ok = true; break;
			}
		}
		if(ok) cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
