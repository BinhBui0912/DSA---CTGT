#include<bits/stdc++.h>

using namespace std;

using ll = long long;

int pre(char c){
	if(c == '(') return 0;
	if(c == '+' || c == '-') return 1;
	if(c == '*' || c == '/') return 2;
	if(c == '^') return 3;
}

ll tinhtoan(ll a, ll b, char c){
	if(c == '+') return a + b;
	if(c == '-') return a - b;
	if(c == '*') return a * b;
	if(c == '/') return a / b;
}

void solve(string s){
	stack<ll> st1;
	stack<char> st2;
	for(int i = 0; i < s.size(); i++){
		if(s[i] == '('){
			st2.push(s[i]);
		}
		else if(isdigit(s[i])){
			ll tmp = 0;
			while(i < s.size() && isdigit(s[i])){
				tmp = tmp * 10 + s[i] - '0';
				i++;
			}
			st1.push(tmp);
			i--;
		}
		else if(s[i] == ')'){
			while(!st2.empty() && st2.top() != '('){
				ll op1 = st1.top(); st1.pop();
				ll op2 = st1.top(); st1.pop();
				ll tmp = tinhtoan(op2, op1, st2.top());
				st1.push(tmp);
				st2.pop();
			}
			st2.pop();
		}
		else{
			while(!st2.empty() && pre(st2.top()) >= pre(s[i])){
				ll op1 = st1.top(); st1.pop();
				ll op2 = st1.top(); st1.pop();
				ll tmp = tinhtoan(op2, op1, st2.top());
				st1.push(tmp);
				st2.pop();
			}
			st2.push(s[i]);
		}
	}
	while(!st2.empty()){
		ll op1 = st1.top(); st1.pop();
		ll op2 = st1.top(); st1.pop();
		ll tmp = tinhtoan(op2, op1, st2.top());
		st1.push(tmp);
		st2.pop();
	}
	cout << st1.top() << endl;
}	

int main(){
	int t; cin >> t;
	while(t--){
		string s; cin >> s;
		solve(s);
	}
}
